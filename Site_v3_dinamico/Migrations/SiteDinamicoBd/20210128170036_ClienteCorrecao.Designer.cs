// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Site_v3_dinamico.Data;

namespace Site_v3_dinamico.Migrations.SiteDinamicoBd
{
    [DbContext(typeof(SiteDinamicoBdContext))]
    [Migration("20210128170036_ClienteCorrecao")]
    partial class ClienteCorrecao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Site_v3_dinamico.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Telemóvel")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.Competencias", b =>
                {
                    b.Property<int>("CompetenciasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricaoComp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nivelComp")
                        .HasColumnType("int");

                    b.Property<string>("nomeComp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeLinguagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompetenciasId");

                    b.ToTable("Competencias");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.Encomenda", b =>
                {
                    b.Property<int>("EncomendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ServicosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataEncomenda")
                        .HasColumnType("datetime2");

                    b.HasKey("EncomendaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ServicosId");

                    b.ToTable("Encomenda");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.Exp_Profissional", b =>
                {
                    b.Property<int>("Exp_ProfissionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("dataFim")
                        .HasColumnType("int");

                    b.Property<int>("dataInicio")
                        .HasColumnType("int");

                    b.Property<string>("descricaoFuncao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Exp_ProfissionalId");

                    b.ToTable("Exp_Profissional");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.Formacao", b =>
                {
                    b.Property<int>("FormacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("conteudos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataFim")
                        .HasColumnType("datetime2");

                    b.Property<string>("dataIniciodataFim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logotipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeInstituicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormacaoId");

                    b.ToTable("Formacao");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.FormacaoComp", b =>
                {
                    b.Property<int>("FormacaoCompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dataIniciodataFimComp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCursoComp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeInstituicaoComp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormacaoCompId");

                    b.ToTable("FormacaoComp");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.Servicos", b =>
                {
                    b.Property<int>("ServicosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ServicosId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Site_v3_dinamico.Models.Encomenda", b =>
                {
                    b.HasOne("Site_v3_dinamico.Models.Cliente", "Cliente")
                        .WithMany("Encomenda")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Site_v3_dinamico.Models.Servicos", "Servicos")
                        .WithMany("Encomenda")
                        .HasForeignKey("ServicosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
